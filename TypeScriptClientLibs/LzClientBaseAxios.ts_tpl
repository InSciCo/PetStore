
import { Auth} from "aws-amplify";
import { AppConfig } from "./AppConfig";

export class LzClientBaseAxios {
    private appConfig: any;

    constructor(appConfig: any) {
        this.appConfig = appConfig;
    }

    protected async transformOptions(clientMethod: string, options: AxiosRequestConfig) {
        let gatewayName = this.appConfig.MethodMap[clientMethod]; // get ApiGateway servicing the method
        let gateway = this.appConfig.Aws.ApiGateways[gatewayName];
        let port = (gateway.Port === 443) ? "" : ":" + gateway.Port;
        let url = gateway.Scheme + "://" + gateway.Id + "." + gateway.Service + "." + AppConfig.Aws.Region + "." + gateway.Host + port + "/" + gateway.Stage;

        options.url = url + options.url;

        switch(gateway.SecurityLevel) {

            case 0:
                // No security so don't add a header
                break;
            case 1: // JWT
                options.headers = {
                    ...Headers,
                    Authorization: (await Auth.currentSession()).getAccessToken().getJwtToken()
                };
                break;
            case 2: // // AwsSignatureVersion4
                throw new Error("Signed Requests unsupported in JS client.")
                // Todo: Use amplify to sign request
                //options.headers = {
                //    ...Headers,
                //    LzIdentity: (await Auth.currentSession()).getAccessToken().getJwtToken()
                //};
                //break;
            default:
                // Unknown security level so don't do anything
                break;
        }
        return Promise.resolve(options);
    }
}